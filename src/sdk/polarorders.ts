/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersOrdersInvoice } from "../funcs/usersOrdersInvoice.js";
import { usersOrdersList } from "../funcs/usersOrdersList.js";
import { usersOrdersRetrieve } from "../funcs/usersOrdersRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class PolarOrders extends ClientSDK {
    /**
     * List Orders
     *
     * @remarks
     * List my orders.
     */
    async list(
        request: operations.UsersOrdersListRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.UsersOrdersListResponse>> {
        return unwrapResultIterator(usersOrdersList(this, request, options));
    }

    /**
     * Get Order
     *
     * @remarks
     * Get an order by ID.
     */
    async retrieve(
        request: operations.UsersOrdersGetRequest,
        options?: RequestOptions
    ): Promise<components.UserOrder> {
        return unwrapAsync(usersOrdersRetrieve(this, request, options));
    }

    /**
     * Get Order Invoice
     *
     * @remarks
     * Get an order's invoice data.
     */
    async invoice(
        request: operations.UsersOrdersInvoiceRequest,
        options?: RequestOptions
    ): Promise<components.UserOrderInvoice> {
        return unwrapAsync(usersOrdersInvoice(this, request, options));
    }
}
