/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ordersInvoice } from "../funcs/ordersInvoice.js";
import { ordersList } from "../funcs/ordersList.js";
import { ordersRetrieve } from "../funcs/ordersRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Orders extends ClientSDK {
    /**
     * List Orders
     *
     * @remarks
     * List orders.
     */
    async list(
        request: operations.OrdersListRequest,
        options?: RequestOptions
    ): Promise<PageIterator<operations.OrdersListResponse>> {
        return unwrapResultIterator(ordersList(this, request, options));
    }

    /**
     * Get Order
     *
     * @remarks
     * Get an order by ID.
     */
    async retrieve(
        request: operations.OrdersGetRequest,
        options?: RequestOptions
    ): Promise<components.OrderOutput> {
        return unwrapAsync(ordersRetrieve(this, request, options));
    }

    /**
     * Get Order Invoice
     *
     * @remarks
     * Get an order's invoice data.
     */
    async invoice(
        request: operations.OrdersInvoiceRequest,
        options?: RequestOptions
    ): Promise<components.OrderInvoice> {
        return unwrapAsync(ordersInvoice(this, request, options));
    }
}
